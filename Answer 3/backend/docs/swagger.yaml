basePath: /api
definitions:
  main.Todo:
    properties:
      detail:
        description: |-
          Detail of the todo
          Detail of the todo
          @Description Detail of the todo
        type: string
      id:
        description: |-
          ID of the todo
          @ID ID
        type: integer
      status:
        description: |-
          Status of the todo (true if completed, false otherwise)
          @Description Status of the todo
        type: boolean
      title:
        description: |-
          Title of the todo
          @Description Title of the todo
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Status of the todo
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Todo API
  version: "1.0"
paths:
  /api/Todos:
    get:
      description: Get a list of all todos
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Todo'
            type: array
      summary: List all todos
    post:
      consumes:
      - application/json
      description: Create a new todo item
      parameters:
      - description: Todo object to be added
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/main.Todo'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.Todo'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new todo
  /api/Todos/{id}:
    delete:
      description: Delete a todo item by ID
      parameters:
      - description: Todo ID to be deleted
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a todo
    put:
      consumes:
      - application/json
      description: Update a todo item by ID
      parameters:
      - description: Todo ID to be updated
        in: path
        name: id
        required: true
        type: integer
      - description: Todo object to be updated
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/main.Todo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Todo'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update an existing todo
schemes:
- http
swagger: "2.0"
